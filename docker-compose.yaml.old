version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - bridge_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile-backend
    container_name: backend
    environment:
      FLASK_DB_TYPE: "postgres"
      FLASK_DB_USER: "postgres"
      FLASK_DB_NAME: "postgres"
      FLASK_DB_PASSWORD: "postgres"
      FLASK_DB_HOST: "postgres"
      FLASK_DB_PORT: "5432"
    ports:
      - "5000:5000"
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bridge_network

  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile-frontend
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    restart: on-failure
    networks:
      - bridge_network

volumes:
  postgres-data:

networks:
  bridge_network:
    driver: bridge
